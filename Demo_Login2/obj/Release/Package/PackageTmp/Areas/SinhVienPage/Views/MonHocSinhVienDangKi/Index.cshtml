@model List<Demo_Login2.Models.DTO.MonHocSinhVienDangKiDTO>
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/AdminPage/Views/Shared/_AdminLayout.cshtml";
}

<style>
    .tbl-head {
        text-align: center;
        background: #FECE7A;
        border: #fff solid 1px;
        text-transform: uppercase;
    }

    .custom-label {
        border: none;
    }

        .custom-label:focus {
            outline: none;
        }

    .col-120 {
        width: 120px;
        text-align: center;
    }

    .col-400 {
        width: 400px;
    }

    .col-60 {
        width: 60px;
        text-align: center;
    }

    .col-68 {
        width: 68px;
        text-align: center;
    }
    /*.col-350{
        width:400px
    }*/
    .col-350 {
        text-align: center;
        width: 365px;
    }

    .center {
        text-align: center;
    }
</style>

<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0">Môn học sinh viên đăng kí</h1>
                </div><!-- /.col -->
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "ChuongTrinhDaoTao")">Trang chủ</a></li>
                        <li class="breadcrumb-item active">Môn học sinh viên đăng kí</li>
                    </ol>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <section class="content">
        <div class="card">
            <!-- /.card-header -->
            <div class="card-body" style="display: flex; flex-direction: column-reverse;">
                <br />
                <table class="table table-bordered">
                    <tr class="tbl-head">
                        <th rowspan="2">TT</th>
                        <th rowspan="2">Mã học phần</th>
                        <th rowspan="2">Tên học phần</th>
                        <th rowspan="2">Số TC</th>
                        <th colspan="2">Số Tiết</th>
                        <th rowspan="2">Học Phần Tiên Quyết</th>
                        <th rowspan="2">Học Phần Học Trước</th>
                        <th rowspan="2">Khoa/Bộ môn</th>
                        <th rowspan="2">Đăng kí</th>
                    </tr>
                    <tr class="tbl-head">
                        <th colspan="1">LT</th>
                        <th colspan="1">TH</th>
                    </tr>
                    @if (Model.Count() > 0)
                    {
                        using (Html.BeginForm("Index", "MonHocSinhVienDangKi"))
                        {
                            @Html.AntiForgeryToken();

                            var stt = 0;

                            var TongTC_chuongtrinhdaotao_batbuoc = 0;
                            var TongTC_chuongtrinhdaotao_tuchon = 0;
                            var TongTC_ketquahoctap = 0;
                            var TongTC_monhocvuot = 0;

                            var chuongtrinhdaotao_batbuoc = Model.Where(c => c.LoaiDangKi == 1);
                            var chuongtrinhdaotao_tuchon = Model.Where(c => c.LoaiDangKi == 2);

                            var ketquahoctap = Model.Where(c => c.LoaiDangKi == 3);

                            var monhocvuot = Model.Where(c => c.LoaiDangKi == 4);

                            <tr>
                                <th colspan="10">@ViewBag.tenhocki</th>
                            </tr>
                            //Mon hoc bat buoc
                            if (chuongtrinhdaotao_batbuoc.Count() > 0)
                            {
                                <tr>
                                    <th colspan="10">Bắt buộc</th>
                                </tr>
                                for (var i = 0; i < Model.Count; i++)
                                {
                                    if (Model[i].LoaiDangKi == 1)
                                    {
                                        stt = stt + 1;
                                        <tr>
                                            <td class="center">@stt</td>
                                            <td class="col-120">@Html.EditorFor(model => model[i].MaMonHoc, new { htmlAttributes = new { @class = "custom-label w-100", @readonly = "readonly" } })</td>
                                            <td class="col-400">@Html.EditorFor(model => model[i].TenMonHoc, new { htmlAttributes = new { @class = "custom-label col-400 w-100", @readonly = "readonly" } })</td>
                                            <td class="col-60">@Html.EditorFor(model => model[i].SoTinChi, new { htmlAttributes = new { @class = "custom-label col-55 w-100", @readonly = "readonly" } })</td>
                                            <td class="col-68">@Html.EditorFor(model => model[i].SoTietLyThuyet, new { htmlAttributes = new { @class = "custom-label col-55 w-100", @readonly = "readonly" } })</td>
                                            <td class="col-68">@Html.EditorFor(model => model[i].SoTietThucHanh, new { htmlAttributes = new { @class = "custom-label col-55 w-100", @readonly = "readonly" } })</td>

                                            <td class="col-350">@Html.EditorFor(model => model[i].TenMonHocTienQuyet, new { htmlAttributes = new { @class = "custom-label col-350 w-100", @readonly = "readonly" } })</td>
                                            <td class="col-350">@Html.EditorFor(model => model[i].TenMonHocHocTruoc, new { htmlAttributes = new { @class = "custom-label col-350 w-100", @readonly = "readonly" } })</td>
                                            <td class="col-350">@Html.EditorFor(model => model[i].TenKhoaBoMon, new { htmlAttributes = new { @class = "custom-label col-350 w-100", @readonly = "readonly" } })</td>

                                            <td>
                                                @functions {
                                                    object getHtmlAttributes(int disabled, string CssClass)
                                                    {
                                                        if (disabled == 1)
                                                        {
                                                            return new { @class = CssClass, @disabled = "disabled" };
                                                        }
                                                        return new { @class = CssClass };
                                                    }
                                                }
                                                @Html.EditorFor(model => model[i].TrangThai, new { htmlAttributes = @getHtmlAttributes(Model[i].ChoPhepDangKi, "form-control w-100") })


                                                @Html.HiddenFor(model => model[i].IDHocKi, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDAccount, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDMonHoc, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].LoaiDangKi, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDKhoaBoMon, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDLopHoc, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDKhoaDaoTao, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDHocPhanTienQuyet, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDHocPhanHocTruoc, new { htmlAttributes = new { @class = "form-control" } })
                                            </td>
                                        </tr>
                                        TongTC_chuongtrinhdaotao_batbuoc = TongTC_chuongtrinhdaotao_batbuoc + Model[i].SoTinChi;
                                    }

                                }
                                if (TongTC_chuongtrinhdaotao_batbuoc > 0)
                                {
                                    <tr>
                                        <td colspan="3" class="text-right font-weight-bold">Cộng học phần Bắt buộc</td>
                                        <td class="font-weight-bold ">@TongTC_chuongtrinhdaotao_batbuoc</td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                    </tr>
                                }
                            }
                            //Mon hoc tu chon
                            if (chuongtrinhdaotao_tuchon.Count() > 0)
                            {
                                <tr>
                                    <th colspan="10">Tự chọn</th>
                                </tr>
                                for (var i = 0; i < Model.Count; i++)
                                {
                                    if (Model[i].LoaiDangKi == 2)
                                    {
                                        stt = stt + 1;
                                        <tr>
                                            <td class="center">@stt</td>
                                            <td class="col-120">@Html.EditorFor(model => model[i].MaMonHoc, new { htmlAttributes = new { @class = "custom-label w-100", @readonly = "readonly" } })</td>
                                            <td class="col-400">@Html.EditorFor(model => model[i].TenMonHoc, new { htmlAttributes = new { @class = "custom-label col-400 w-100", @readonly = "readonly" } })</td>
                                            <td class="col-60">@Html.EditorFor(model => model[i].SoTinChi, new { htmlAttributes = new { @class = "custom-label col-55 w-100", @readonly = "readonly" } })</td>
                                            <td class="col-68">@Html.EditorFor(model => model[i].SoTietLyThuyet, new { htmlAttributes = new { @class = "custom-label col-55 w-100", @readonly = "readonly" } })</td>
                                            <td class="col-68">@Html.EditorFor(model => model[i].SoTietThucHanh, new { htmlAttributes = new { @class = "custom-label col-55 w-100", @readonly = "readonly" } })</td>

                                            <td class="col-350">@Html.EditorFor(model => model[i].TenMonHocTienQuyet, new { htmlAttributes = new { @class = "custom-label col-350 w-100", @readonly = "readonly" } })</td>
                                            <td class="col-350">@Html.EditorFor(model => model[i].TenMonHocHocTruoc, new { htmlAttributes = new { @class = "custom-label col-350 w-100", @readonly = "readonly" } })</td>
                                            <td class="col-350">@Html.EditorFor(model => model[i].TenKhoaBoMon, new { htmlAttributes = new { @class = "custom-label col-350 w-100", @readonly = "readonly" } })</td>
                                            <td>

                                                @Html.EditorFor(model => model[i].TrangThai, new { htmlAttributes = @getHtmlAttributes(Model[i].ChoPhepDangKi, "form-control w-100") })

                                                @Html.HiddenFor(model => model[i].IDHocKi, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDAccount, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDMonHoc, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].LoaiDangKi, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDKhoaBoMon, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDLopHoc, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDKhoaDaoTao, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDHocPhanTienQuyet, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDHocPhanHocTruoc, new { htmlAttributes = new { @class = "form-control" } })
                                            </td>
                                        </tr>
                                        TongTC_chuongtrinhdaotao_tuchon = TongTC_chuongtrinhdaotao_tuchon + Model[i].SoTinChi;
                                    }

                                }
                                if (TongTC_chuongtrinhdaotao_tuchon > 0)
                                {
                                    <tr>
                                        <td colspan="3" class="text-right font-weight-bold">Cộng học phần Tự Chọn</td>
                                        <td class="font-weight-bold ">@TongTC_chuongtrinhdaotao_tuchon</td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                    </tr>
                                }
                            }
                            //Mon hoc co diem chua dat
                            if (ketquahoctap.Count() > 0)
                            {
                                <tr>
                                    <th colspan="10">Học phần đã học nhưng chưa đạt</th>
                                </tr>
                                for (var i = 0; i < Model.Count; i++)
                                {
                                    if (Model[i].LoaiDangKi == 3)
                                    {
                                        stt = stt + 1;
                                        <tr>
                                            <td class="center">@stt</td>
                                            <td class="col-120">@Html.EditorFor(model => model[i].MaMonHoc, new { htmlAttributes = new { @class = "custom-label w-100", @readonly = "readonly" } })</td>
                                            <td class="col-400">@Html.EditorFor(model => model[i].TenMonHoc, new { htmlAttributes = new { @class = "custom-label col-400 w-100", @readonly = "readonly" } })</td>
                                            <td class="col-60">@Html.EditorFor(model => model[i].SoTinChi, new { htmlAttributes = new { @class = "custom-label col-55 w-100", @readonly = "readonly" } })</td>
                                            <td class="col-68">@Html.EditorFor(model => model[i].SoTietLyThuyet, new { htmlAttributes = new { @class = "custom-label col-55 w-100", @readonly = "readonly" } })</td>
                                            <td class="col-68">@Html.EditorFor(model => model[i].SoTietThucHanh, new { htmlAttributes = new { @class = "custom-label col-55 w-100", @readonly = "readonly" } })</td>
                                            <td class="col-350">@Html.EditorFor(model => model[i].TenMonHocTienQuyet, new { htmlAttributes = new { @class = "custom-label col-350 w-100", @readonly = "readonly" } })</td>
                                            <td class="col-350">@Html.EditorFor(model => model[i].TenMonHocHocTruoc, new { htmlAttributes = new { @class = "custom-label col-350 w-100", @readonly = "readonly" } })</td>
                                            <td class="col-350">@Html.EditorFor(model => model[i].TenKhoaBoMon, new { htmlAttributes = new { @class = "custom-label col-350 w-100", @readonly = "readonly" } })</td>
                                            <td>

                                                @Html.EditorFor(model => model[i].TrangThai, new { htmlAttributes = @getHtmlAttributes(Model[i].ChoPhepDangKi, "form-control w-100") })

                                                @Html.HiddenFor(model => model[i].IDHocKi, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDAccount, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDMonHoc, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].LoaiDangKi, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDKhoaBoMon, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDLopHoc, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDKhoaDaoTao, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDHocPhanTienQuyet, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDHocPhanHocTruoc, new { htmlAttributes = new { @class = "form-control" } })
                                            </td>
                                        </tr>
                                        TongTC_ketquahoctap = TongTC_ketquahoctap + Model[i].SoTinChi;
                                    }

                                }
                                if (TongTC_ketquahoctap > 0)
                                {
                                    <tr>
                                        <td colspan="3" class="text-right font-weight-bold">Cộng học phần đã học nhưng chưa đạt</td>
                                        <td class="font-weight-bold ">@TongTC_ketquahoctap</td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                    </tr>
                                }

                            }
                            //Mon hoc vuot
                            if (monhocvuot.Count() > 0)
                            {
                                <tr>
                                    <th colspan="10">Học Vượt</th>
                                </tr>

                                for (var i = 0; i < Model.Count; i++)
                                {
                                    if (Model[i].LoaiDangKi == 4)
                                    {
                                        stt = stt + 1;
                                        <tr>
                                            <td class="center">@stt</td>
                                            <td class="col-120">@Html.EditorFor(model => model[i].MaMonHoc, new { htmlAttributes = new { @class = "custom-label w-100", @readonly = "readonly" } })</td>
                                            <td class="col-400">@Html.EditorFor(model => model[i].TenMonHoc, new { htmlAttributes = new { @class = "custom-label col-400 w-100", @readonly = "readonly" } })</td>
                                            <td class="col-60">@Html.EditorFor(model => model[i].SoTinChi, new { htmlAttributes = new { @class = "custom-label col-55 w-100", @readonly = "readonly" } })</td>
                                            <td class="col-68">@Html.EditorFor(model => model[i].SoTietLyThuyet, new { htmlAttributes = new { @class = "custom-label col-55 w-100", @readonly = "readonly" } })</td>
                                            <td class="col-68">@Html.EditorFor(model => model[i].SoTietThucHanh, new { htmlAttributes = new { @class = "custom-label col-55 w-100", @readonly = "readonly" } })</td>
                                            <td></td>
                                            <td></td>
                                            @*<td class="col-350">@Html.EditorFor(model => model[i].TenMonHocTienQuyet, new { htmlAttributes = new { @class = "custom-label col-350 w-100", @readonly = "readonly" } })</td>
                                            <td class="col-350">@Html.EditorFor(model => model[i].TenMonHocHocTruoc, new { htmlAttributes = new { @class = "custom-label col-350 w-100", @readonly = "readonly" } })</td>*@
                                            <td class="col-350">@Html.EditorFor(model => model[i].TenKhoaBoMon, new { htmlAttributes = new { @class = "custom-label col-350 w-100", @readonly = "readonly" } })</td>
                                            <td>

                                                @Html.EditorFor(model => model[i].TrangThai, new { htmlAttributes = @getHtmlAttributes(Model[i].ChoPhepDangKi, "form-control w-100") })

                                                @Html.HiddenFor(model => model[i].IDHocKi, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDAccount, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDMonHoc, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].LoaiDangKi, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDKhoaBoMon, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDLopHoc, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDKhoaDaoTao, new { htmlAttributes = new { @class = "form-control" } })
                                                @*@Html.HiddenFor(model => model[i].IDHocPhanTienQuyet, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.HiddenFor(model => model[i].IDHocPhanHocTruoc, new { htmlAttributes = new { @class = "form-control" } })*@
                                        </tr>
                                        TongTC_monhocvuot = TongTC_monhocvuot + Model[i].SoTinChi;
                                    }
                                }
                                if (TongTC_monhocvuot > 0)
                                {
                                    <tr>
                                        <td colspan="3" class="text-right font-weight-bold">Cộng học phần môn học vượt</td>
                                        <td class="font-weight-bold">@TongTC_monhocvuot</td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                    </tr>
                                }
                            }

                            <div class="col-md-offset-2 col-md-10 px-0 py-2">
                                <button class="btn btn-outline-success">
                                    <i class="fas fa-check">
                                        Lưu
                                    </i>
                                </button>
                            </div>
                            <p class="text-danger">@ViewBag.Error</p>
                        }
                        <tr>
                            <th colspan="10">Tìm môn học vượt</th>
                        </tr>
                        <tr>
                            <td></td>
                            <td>
                                <input type="text" id="txtMonHocVuot" class="form-control" />
                            </td>
                            <td>
                                <button class="btn btn-outline-info" id="btnTim_MonHocVuot">
                                    <i class="fas fa-search">
                                        Tìm
                                    </i>
                                </button>
                            </td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                        </tr>
                        <tr>
                            <th colspan="10">- Ghi chú : _Những môn có dấu (*) sẽ không tính điểm trung bình mà chỉ là môn điều kiện.</th>                            
                        </tr>
                        <tr>
                            <th colspan="10">- Đối với những môn bị ẩn không cho phép sinh viên đăng kí,có thể sinh viên chưa đủ điểm qua môn tiên quyết của môn đó </th>
                        </tr>
                    }


                </table>

            </div>
        </div>
    </section>
</div>

@if (ViewBag.Success != null)
{
    <script>
        window.onload = function () {
            swal({
                title: "Đăng kí Thành công",
                text: "",
                icon: "success",
            })
        }
    </script>
}
@if (ViewBag.Error != null)
{
    <script>
        window.onload = function () {
            swal({
                title: "Trùng Data",
                text: "",
                icon: "warning",
            })
        }
    </script>
}
@if (ViewBag.Errorthoigiandangki != null)
{
    <script>
        window.onload = function () {
            swal({
                title: "Chưa đến thời gian mở đăng kí",
                text: "",
                icon: "warning",
            })
        }
    </script>
}
@if (ViewBag.Errorhethandangki != null)
{
    <script>
        window.onload = function () {
            swal({
                title: "Đã quá thời gian đăng kí môn học",
                text: "",
                icon: "warning",
            })
        }
    </script>
}

<script src="~/Content/plugins/jquery/jquery.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {

        $("#btnTim_MonHocVuot").on("click", function () {
            var maMonHoc = $('#txtMonHocVuot').val();

            var link = '@Url.Action("Lay_MonHocVuot", "MonHocSinhVienDangKi", new { id = "_ma_" })';
            link = link.replace("_ma_", maMonHoc);
            location.pathname = link;
        })
    })
</script>

